import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

path = "/home/onyxia/work/statapp_sujet26/"
file_name1 = "dataset_complet_part_1.csv"
file_name2 = "dataset_complet_part_2.csv"
df1 = pd.read_csv(path + file_name1, sep=',', low_memory=False)
df2 = pd.read_csv(path + file_name2, sep=',', low_memory=False)
df = pd.concat([df1, df2])
df['grav'] = df['grav'].replace({'1': 0, '2': 0, '3': 1, '4': 1, 1: 0, 2: 0, 3: 1, 4: 1}).astype(int)
df = df[df['an'] == 2019]


# Make sure 'Num_Acc' and 'atm' are present in the 'caracteristiques' files
df = df[['Num_Acc', 'atm', 'an', 'grav']]  # Keep only the necessary columnns

def map_surface_category(surf_state):
    """
    Mapping pour regrouper les états de surface en catégories personnalisées.
    """
    if surf_state in [2, 3, 6]:
        return 'Pluie/tempête'
    elif surf_state in [4]:
        return 'Neige'
    elif surf_state in [5, 8]:
        return 'Couvert'
    elif surf_state in [1, 7]:
        return 'Normale'
    elif surf_state == 6:
        return ''
    else:
        return 'Autre'

# Apply the mapping to the data
df['atm'] = df['atm'].apply(map_surface_category)

# Filter to exclude unwanted categories
df_filtered = df[df['atm'] != 'Autre']

# Create a pivot table to prepare data for the graph
pivot_table = df_filtered.pivot_table(index='atm', columns='grav', aggfunc='size', fill_value=0)

# Plot the bar chart
plt.figure(figsize=(10, 6))
ax = pivot_table.plot(kind='bar', stacked=False)

# Customize labels and title
plt.xlabel('Condition météorologique')
plt.ylabel("Nombre d'accidents")
plt.title("Nombre d'accidents par condition météorologique selon la gravité")

# Add legend
plt.legend(title='Gravité')

# Adjust x-axis labels
c

# Save the figure
plt.savefig(path + 'stat_des2/' + 'condition_meteo_2019.png', bbox_inches='tight')
plt.show()

